swagger: "2.0"
info:
  title: Wait for Reboot Microservice
  description: Waits for Crestron machines to reboot and reports back when they do
  version: "0.1"
# host: api.byu.edu
host: avmetrics1.byu.edu:8003
schemes:
  - http
# basePath: "/v0.1"
produces:
  - application/json
paths:
  /health:
    get:
      summary: Check Service Health
      description: |
        Returns information about the microservice's health.
      tags:
        - Health
      responses:
        200:
          description: A health message
          schema:
            type: array
            items:
              $ref: "#/definitions/response"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
        503:
          $ref: "#/responses/503"
        default:
          $ref: "#/responses/default"
  /submit:
    get:
      summary: Get Submit Information
      description: |
        Returns information about the /submit endpoint.
      tags:
        - Wait
      responses:
        200:
          description: Endpoint information
          schema:
            type: array
            items:
              $ref: "#/definitions/response"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
        503:
          $ref: "#/responses/503"
        default:
          $ref: "#/responses/default"
    post:
      summary: Submit for Wait
      description: |
        Submit a machine to the listen microservice.
      parameters:
        - name: body
          description: Information about the machine to be monitored
          in: body
          required: true
          schema:
            $ref: "#/definitions/file-request"
      tags:
        - Wait
      responses:
        201:
          description: All went well
          schema:
            $ref: "#/definitions/response"
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"
        503:
          $ref: "#/responses/503"
        default:
          $ref: "#/responses/default"
definitions:
  HATEOAS:
    type: object
    properties:
      rel:
        type: string
        description: A human-readable name for what the link represents
      href:
        type: string
        description: The link to the endpoint
  response:
    type: object
    properties:
      links:
        type: array
        items:
          $ref: "#/definitions/HATEOAS"
      message:
        type: string
        description: A human-readable message about what just happened
  file-request:
    type: object
    required:
      - "MachineAddress"
      - "CallbackAddress"
    properties:
      MachineAddress:
        type: string
        description: The address of the machine to be monitored for reboot
      Port:
        type: integer
        description: The port of the machine to be used for connection
      CallbackAddress:
        type: string
        description: The address to POST to upon reboot
      Identifier:
        type: string
        description: A value passed to the callback address to identify the machine that has rebooted
      Timeout:
        type: integer
        description: How long to attempt a connection in seconds
  error:
    type: object
    properties:
      message:
        type: string
responses:
  401:
    description: You are not authorized to make that request
    schema:
      $ref: "#/definitions/error"
  500:
    description: There was a problem with the server on our end
    schema:
      $ref: "#/definitions/error"
  503:
    description: The server is overloaded, is under maintenance, or is otherwise unavailable
    schema:
      $ref: "#/definitions/error"
  default:
    description: Unexpected error
    schema:
      $ref: "#/definitions/error"
